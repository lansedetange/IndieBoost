import { LaunchPackage } from "@/types/launch";

export function exportToMarkdown(launchPackage: LaunchPackage): void {
  const platformNames = {
    "product-hunt": "Product Hunt",
    "reddit": "Reddit",
    "hacker-news": "Hacker News", 
    "twitter": "X (Twitter)",
    "discord": "Discord",
  };

  let markdown = `# ${launchPackage.projectName} - Launch Scripts\n\n`;
  markdown += `**Tagline:** ${launchPackage.tagline}\n\n`;
  markdown += `**Generated:** ${new Date(launchPackage.createdAt).toLocaleDateString()}\n\n`;
  markdown += `---\n\n`;

  launchPackage.scripts.forEach((script) => {
    markdown += `## ${platformNames[script.platform]}\n\n`;
    markdown += `${script.content}\n\n`;
    markdown += `---\n\n`;
  });

  markdown += `\n*Generated by LaunchForge - AI Launch Script Factory*\n`;
  markdown += `*Visit: https://launchforge.app*\n`;

  downloadFile(
    markdown,
    `${launchPackage.projectName.replace(/\s+/g, '-').toLowerCase()}-launch-scripts.md`,
    'text/markdown'
  );
}

export function exportToPDF(launchPackage: LaunchPackage): void {
  // For now, we'll create an HTML version that can be printed to PDF
  const platformNames = {
    "product-hunt": "Product Hunt",
    "reddit": "Reddit", 
    "hacker-news": "Hacker News",
    "twitter": "X (Twitter)",
    "discord": "Discord",
  };

  let html = `
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>${launchPackage.projectName} - Launch Scripts</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; line-height: 1.6; }
        h1 { color: #333; border-bottom: 2px solid #eee; padding-bottom: 10px; }
        h2 { color: #555; margin-top: 30px; }
        .meta { color: #666; font-style: italic; margin-bottom: 20px; }
        .content { white-space: pre-wrap; background: #f9f9f9; padding: 15px; border-radius: 5px; margin: 15px 0; }
        .footer { margin-top: 40px; text-align: center; color: #888; font-size: 0.9em; }
        @media print { 
            body { margin: 0; } 
            .content { page-break-inside: avoid; }
        }
    </style>
</head>
<body>
    <h1>${launchPackage.projectName} - Launch Scripts</h1>
    <div class="meta">
        <strong>Tagline:</strong> ${launchPackage.tagline}<br>
        <strong>Generated:</strong> ${new Date(launchPackage.createdAt).toLocaleDateString()}
    </div>
`;

  launchPackage.scripts.forEach((script) => {
    html += `
    <h2>${platformNames[script.platform]}</h2>
    <div class="content">${script.content.replace(/\n/g, '<br>')}</div>
`;
  });

  html += `
    <div class="footer">
        Generated by LaunchForge - AI Launch Script Factory<br>
        Visit: <a href="https://launchforge.app">https://launchforge.app</a>
    </div>
</body>
</html>`;

  // Open in new window for PDF printing
  const newWindow = window.open('', '_blank');
  if (newWindow) {
    newWindow.document.write(html);
    newWindow.document.close();
    newWindow.focus();
    setTimeout(() => newWindow.print(), 500);
  }
}

export function exportToNotion(launchPackage: LaunchPackage): void {
  const platformNames = {
    "product-hunt": "Product Hunt",
    "reddit": "Reddit",
    "hacker-news": "Hacker News",
    "twitter": "X (Twitter)", 
    "discord": "Discord",
  };

  let notionContent = `# ${launchPackage.projectName} - Launch Scripts\n\n`;
  notionContent += `**Tagline:** ${launchPackage.tagline}\n\n`;
  notionContent += `**Generated:** ${new Date(launchPackage.createdAt).toLocaleDateString()}\n\n`;

  launchPackage.scripts.forEach((script) => {
    notionContent += `## ${platformNames[script.platform]}\n\n`;
    notionContent += `\`\`\`\n${script.content}\n\`\`\`\n\n`;
  });

  notionContent += `---\n*Generated by LaunchForge*`;

  // Copy to clipboard with instructions
  navigator.clipboard.writeText(notionContent).then(() => {
    alert(`Content copied to clipboard!\n\nTo import to Notion:\n1. Create a new page in Notion\n2. Paste the content (Ctrl/Cmd + V)\n3. Notion will automatically format the markdown`);
  }).catch(() => {
    // Fallback: download as text file
    downloadFile(
      notionContent,
      `${launchPackage.projectName.replace(/\s+/g, '-').toLowerCase()}-notion-import.txt`,
      'text/plain'
    );
    alert('Downloaded as text file. You can copy the content and paste it into Notion.');
  });
}

function downloadFile(content: string, filename: string, mimeType: string): void {
  const blob = new Blob([content], { type: mimeType });
  const url = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = url;
  link.download = filename;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
}